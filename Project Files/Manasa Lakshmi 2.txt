 Prerequisites
Dataset Folder Structure Before Splitting (after unzip):

Copy
Edit
rice_dataset/
├── Arborio/
│   ├── image_1.jpg
│   ├── image_2.jpg
│   └── ...
├── Basmati/
├── Ipsala/
├── Jasmine/
└── Karacadag/
📂 Desired Structure After Splitting
kotlin
Copy
Edit
rice_split/
├── train/
│   ├── Arborio/
│   ├── Basmati/
│   └── ...
├── val/
│   ├── Arborio/
│   ├── Basmati/
│   └── ...
🧑‍💻 Python Code: Data Splitting Script
python
Copy
Edit
import os
import shutil
import random
from tqdm import tqdm

# Paths
ORIG_DATASET_DIR = 'rice_dataset'
SPLIT_DATASET_DIR = 'rice_split'
TRAIN_RATIO = 0.8

# Create split directories
for split in ['train', 'val']:
    for class_name in os.listdir(ORIG_DATASET_DIR):
        split_class_dir = os.path.join(SPLIT_DATASET_DIR, split, class_name)
        os.makedirs(split_class_dir, exist_ok=True)

# Split each class
for class_name in os.listdir(ORIG_DATASET_DIR):
    class_dir = os.path.join(ORIG_DATASET_DIR, class_name)
    images = os.listdir(class_dir)
    random.shuffle(images)

    split_idx = int(len(images) * TRAIN_RATIO)
    train_imgs = images[:split_idx]
    val_imgs = images[split_idx:]

    # Copy training images
    for img in tqdm(train_imgs, desc=f'Copying train/{class_name}'):
        src = os.path.join(class_dir, img)
        dst = os.path.join(SPLIT_DATASET_DIR, 'train', class_name, img)
        shutil.copy2(src, dst)

    # Copy validation images
    for img in tqdm(val_imgs, desc=f'Copying val/{class_name}'):
        src = os.path.join(class_dir, img)
        dst = os.path.join(SPLIT_DATASET_DIR, 'val', class_name, img)
        shutil.copy2(src, dst)
